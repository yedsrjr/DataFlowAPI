"""create users table

Revision ID: 2de6922737ac
Revises:
Create Date: 2025-05-12 13:38:39.054747

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2de6922737ac"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("animais", "cod_pelagem", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "animais", "proprietario", existing_type=sa.VARCHAR(length=20), nullable=True
    )
    op.alter_column(
        "animais",
        "peso_saida",
        existing_type=sa.Float(),
        type_=sa.NUMERIC(precision=10, scale=2),
        existing_nullable=True,
    )
    op.alter_column(
        "animais",
        "data_saida",
        existing_type=sa.DateTime(),
        type_=sa.DATE(),
        existing_nullable=True,
    )
    op.alter_column(
        "animais",
        "data_processamento",
        existing_type=sa.DateTime(),
        type_=sa.DATE(),
        existing_nullable=True,
    )
    op.alter_column(
        "animais",
        "peso_balancinha",
        existing_type=sa.Float(),
        type_=sa.NUMERIC(precision=10, scale=2),
        existing_nullable=True,
    )
    op.alter_column(
        "animais",
        "data_entrada_fazenda",
        existing_type=sa.DateTime(),
        type_=sa.DATE(),
        existing_nullable=True,
    )
    op.alter_column(
        "animais", "status", existing_type=sa.VARCHAR(length=20), nullable=True
    )
    op.alter_column(
        "animais", "raca", existing_type=sa.VARCHAR(length=50), nullable=True
    )
    op.alter_column(
        "animais", "sexo", existing_type=sa.VARCHAR(length=20), nullable=True
    )
    op.alter_column("animais", "idade_mes", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "animais", "lote", existing_type=sa.VARCHAR(length=50), nullable=True
    )
    op.alter_column(
        "animais", "baia", existing_type=sa.VARCHAR(length=100), nullable=True
    )
    op.create_table(
        "log_insercao_animais",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("docentry", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("status", sa.VARCHAR(length=10), autoincrement=False, nullable=True),
        sa.Column("mensagem", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "data_log",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="log_insercao_animais_pkey"),
    )
    op.drop_table("users")
    # ### end Alembic commands ###
